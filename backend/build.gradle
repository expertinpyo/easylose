plugins {
  id 'org.springframework.boot' version '2.7.3'
  id 'io.spring.dependency-management' version '1.0.13.RELEASE'
  id 'java'
  id 'com.diffplug.spotless' version '6.11.0'
}

group = 'com.easylose'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

  //jjwt
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

  //swagger
  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.11'

  //validation
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.1'

  // mapstruct
  implementation 'org.mapstruct:mapstruct:1.5.2.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
  annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'


}

spotless  {
  lineEndings "UNIX"

  java {
    importOrder()
    googleJavaFormat()
    formatAnnotations()
  }
}

bootRun {
  dependsOn("spotlessCheck")

  if (file('.env').exists()) {
    file('.env').readLines().each() {
      if (!it.isEmpty() && !it.startsWith("#")) {
        def pos = it.indexOf("=")
        def key = it.substring(0, pos)
        def value = it.substring(pos + 1)

        if (System.getenv(key) == null) {
          environment key, value
        }
      }
    }
  }
}

tasks.named('test') {
  useJUnitPlatform()
}
